spring:
  application:
    name: rag-api-langchain4j
  
  main:
    web-application-type: servlet
    lazy-initialization: true
  
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
    
  web:
    resources:
      add-mappings: false

server:
  port: 8080
  servlet:
    context-path: /

# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  # Credentials will be picked up automatically from:
  # 1. Environment variables (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)
  # 2. IAM roles (for EC2/Lambda)
  # 3. AWS credentials file (~/.aws/credentials)
  # 4. IAM roles for service accounts (EKS)

# Bedrock Configuration
bedrock:
  embedding:
    model: ${BEDROCK_EMBEDDING_MODEL:amazon.titan-embed-text-v1}
    # Available models:
    # - amazon.titan-embed-text-v1 (1536 dimensions)
    # - amazon.titan-embed-text-v2:0 (1024 dimensions)
    timeout-seconds: ${BEDROCK_EMBEDDING_TIMEOUT:120}
    max-retries: ${BEDROCK_EMBEDDING_MAX_RETRIES:3}
  
  claude:
    model: ${BEDROCK_CLAUDE_MODEL:anthropic.claude-3-sonnet-20240229-v1:0}
    # Available models:
    # - anthropic.claude-3-sonnet-20240229-v1:0
    # - anthropic.claude-3-haiku-20240307-v1:0
    # - anthropic.claude-3-opus-20240229-v1:0
    # - anthropic.claude-instant-v1
    temperature: ${BEDROCK_CLAUDE_TEMPERATURE:0.7}
    max-tokens: ${BEDROCK_CLAUDE_MAX_TOKENS:4000}
    timeout-seconds: ${BEDROCK_CLAUDE_TIMEOUT:300}
    max-retries: ${BEDROCK_CLAUDE_MAX_RETRIES:3}

# OpenSearch Configuration
opensearch:
  endpoint: ${OPENSEARCH_ENDPOINT:https://localhost:9200}
  username: ${OPENSEARCH_USERNAME:}
  password: ${OPENSEARCH_PASSWORD:}
  
  # Index Configuration
  index:
    name: ${OPENSEARCH_INDEX:documents}
    
  # Vector Configuration
  vector:
    dimension: ${OPENSEARCH_VECTOR_DIMENSION:1536}
    similarity: ${OPENSEARCH_SIMILARITY:cosine}
    # Available similarities: cosine, euclidean, dot_product
    
  # Search Configuration
  search:
    default-limit: ${OPENSEARCH_DEFAULT_LIMIT:5}
    max-limit: ${OPENSEARCH_MAX_LIMIT:20}
    default-threshold: ${OPENSEARCH_DEFAULT_THRESHOLD:0.7}

# RAG Configuration
rag:
  processing:
    chunk-size: ${RAG_CHUNK_SIZE:1000}
    chunk-overlap: ${RAG_CHUNK_OVERLAP:200}
    max-chunks-per-document: ${RAG_MAX_CHUNKS:50}
  
  retrieval:
    default-results: ${RAG_DEFAULT_RESULTS:5}
    max-results: ${RAG_MAX_RESULTS:20}
    similarity-threshold: ${RAG_SIMILARITY_THRESHOLD:0.7}
  
  generation:
    context-window: ${RAG_CONTEXT_WINDOW:8000}
    max-context-chunks: ${RAG_MAX_CONTEXT_CHUNKS:10}

# Logging Configuration
logging:
  level:
    com.example.ragapi: DEBUG
    dev.langchain4j: INFO
    org.springframework.web: INFO
    software.amazon.awssdk: WARN
    org.opensearch: WARN
    org.apache.http: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        
# Health check configuration
management.health:
  opensearch:
    enabled: true
  bedrock:
    enabled: true

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
      
logging:
  level:
    com.example.ragapi: INFO
    dev.langchain4j: WARN
    
rag:
  processing:
    chunk-size: 1500
    chunk-overlap: 300
    
opensearch:
  search:
    default-limit: 3
    max-limit: 10

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
      
logging:
  level:
    com.example.ragapi: DEBUG
    dev.langchain4j: DEBUG
    
opensearch:
  endpoint: http://localhost:9200
  
bedrock:
  embedding:
    timeout-seconds: 60
  claude:
    timeout-seconds: 180

---
# Test profile
spring:
  config:
    activate:
      on-profile: test
      
opensearch:
  endpoint: http://localhost:9200
  index:
    name: test-documents
    
bedrock:
  embedding:
    model: amazon.titan-embed-text-v1
  claude:
    model: anthropic.claude-3-haiku-20240307-v1:0
